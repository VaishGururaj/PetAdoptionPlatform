Index: frontend/src/App.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { createTheme, ThemeProvider } from '@mui/material/styles'; // Import createTheme and ThemeProvider\nimport LoginPage from \"./components/LoginPage/LoginPage\";\nimport SignUpPage from \"./components/SignUpPage/SignUpPage\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport Listpets from \"./components/Listpets/Listpets\";\nimport PetDetails from \"./components/PetDetails/PetDetails\";\n\n// Define your custom theme\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: '#041464', // Set primary color to #041464\n        },\n    },\n});\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}> {/* Wrap your entire app with ThemeProvider */}\n            <div className=\"App\">\n                <Routes>\n                    <Route path=\"/login\" element={<LoginPage />} />\n                    <Route path=\"/signup\" element={<SignUpPage />} />\n                    <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n                    <Route path=\"/dashboard\" element={<Dashboard />} />\n                    <Route path=\"/listpets\" element={<Listpets />} />\n                    <Route path=\"/pets/:id\" element={<PetDetails />} />\n                </Routes>\n            </div>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/App.js b/frontend/src/App.js
--- a/frontend/src/App.js	
+++ b/frontend/src/App.js	
@@ -6,6 +6,7 @@
 import Dashboard from "./components/Dashboard/Dashboard";
 import Listpets from "./components/Listpets/Listpets";
 import PetDetails from "./components/PetDetails/PetDetails";
+import EditPetForm from "./components/PetDetails/EditPetForm";
 
 // Define your custom theme
 const theme = createTheme({
@@ -27,6 +28,7 @@
                     <Route path="/dashboard" element={<Dashboard />} />
                     <Route path="/listpets" element={<Listpets />} />
                     <Route path="/pets/:id" element={<PetDetails />} />
+                    <Route path="/edit-pet/:id" element={<EditPetForm />} />
                 </Routes>
             </div>
         </ThemeProvider>
Index: frontend/src/components/Dashboard/Dashboard.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\nimport {useLocation, useNavigate} from 'react-router-dom';\nimport {Button, Container} from '@mui/material';\nimport Navbar from '../Navbar/Navbar';\nimport OwnerDashboard from './OwnerDashboard';\nimport UserDashboardInitial from \"./UserDashboardInitial\";\n\nconst Dashboard = () => {\n    const location = useLocation();\n    const { role, userData } = location.state;\n    const navigate = useNavigate();\n\n    const handleLogout = () => {\n        navigate('/login');\n    };\n    return (\n        <div>\n            {role === 'user' && <Navbar />}\n            <Container maxWidth=\"md\" sx={{ marginTop: '100px', textAlign: 'center' }}>\n                {role === 'owner' ? (\n                    <OwnerDashboard userData={userData} />\n                ) : (\n                    <div>\n                        <UserDashboardInitial userData={userData} />\n                    </div>\n                )}\n                <Button variant=\"contained\" color=\"primary\" onClick={handleLogout} sx={{ marginTop: '20px' }}>\n                    Logout\n                </Button>\n            </Container>\n        </div>\n    );\n};\n\nexport default Dashboard;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/Dashboard/Dashboard.jsx b/frontend/src/components/Dashboard/Dashboard.jsx
--- a/frontend/src/components/Dashboard/Dashboard.jsx	
+++ b/frontend/src/components/Dashboard/Dashboard.jsx	
@@ -15,7 +15,7 @@
     };
     return (
         <div>
-            {role === 'user' && <Navbar />}
+            <Navbar />
             <Container maxWidth="md" sx={{ marginTop: '100px', textAlign: 'center' }}>
                 {role === 'owner' ? (
                     <OwnerDashboard userData={userData} />
Index: frontend/src/components/Listpets/Listpets.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, useEffect } from 'react';\nimport { Container, Typography, Card, CardContent, Grid, Button } from '@mui/material';\nimport { Link } from 'react-router-dom';\nimport Navbar from '../Navbar/Navbar';\n\nconst Listpets = () => {\n    const [pets, setPets] = useState([]);\n\n    useEffect(() => {\n        // Fetch all pets from the server\n        const fetchPets = async () => {\n            try {\n                const response = await fetch('http://localhost:4000/pets');\n                if (response.ok) {\n                    const petsData = await response.json();\n                    setPets(petsData);\n                } else {\n                    console.error('Error fetching pets:', response.statusText);\n                }\n            } catch (error) {\n                console.error('Error fetching pets:', error);\n            }\n        };\n\n        fetchPets();\n    }, []);\n\n    const handleAddPet = async (ownerId) => {\n        try {\n            // Send a POST request to add a pet request for the specific owner\n            const response = await fetch(`http://localhost:4000/owner/${ownerId}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                // Add any additional data needed for the request\n                // For example, you can pass the pet details in the request body\n                body: JSON.stringify({}),\n            });\n            if (response.ok) {\n                // Handle success\n                console.log('Pet request added successfully');\n            } else {\n                // Handle error\n                console.error('Error adding pet request:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Error adding pet request:', error);\n        }\n    };\n\n    return (\n        <div>\n            <Navbar />\n            <Container maxWidth=\"md\" sx={{ marginTop: '100px', textAlign: 'center' }}>\n                <Typography variant=\"h4\" gutterBottom>User Dashboard</Typography>\n                <Typography variant=\"h5\" gutterBottom>All Pets</Typography>\n                <Grid container spacing={2}>\n                    {pets.map((pet) => (\n                        <Grid item key={pet._id} xs={12} sm={6} md={4}>\n                            <Link to={`/pets/:${pet._id}`} style={{ textDecoration: 'none' }}>\n                                <Card sx={{ height: '100%' }}>\n                                    <CardContent>\n                                        <Typography variant=\"h6\">{pet.name}</Typography>\n                                        <Typography variant=\"body2\" color=\"textSecondary\">{pet.species} - {pet.breed}</Typography>\n                                        <Typography variant=\"body1\">{pet.description}</Typography>\n                                        <Typography variant=\"h6\" color=\"primary\">${pet.adoption_fee}</Typography>\n                                        <Typography variant=\"body2\" color=\"textSecondary\">Age: {pet.age}</Typography>\n                                    </CardContent>\n                                    <Button onClick={() => handleAddPet(pet.owner_id)}>Add Pet</Button>\n                                </Card>\n                            </Link>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n        </div>\n    );\n};\n\nexport default Listpets;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/Listpets/Listpets.jsx b/frontend/src/components/Listpets/Listpets.jsx
--- a/frontend/src/components/Listpets/Listpets.jsx	
+++ b/frontend/src/components/Listpets/Listpets.jsx	
@@ -25,17 +25,16 @@
         fetchPets();
     }, []);
 
-    const handleAddPet = async (ownerId) => {
+    const handleAddPet = async (ownerId, petDetails) => {
         try {
             // Send a POST request to add a pet request for the specific owner
-            const response = await fetch(`http://localhost:4000/owner/${ownerId}`, {
+            const response = await fetch(`http://localhost:4000/owner/:${ownerId}`, {
                 method: 'POST',
                 headers: {
                     'Content-Type': 'application/json',
                 },
-                // Add any additional data needed for the request
-                // For example, you can pass the pet details in the request body
-                body: JSON.stringify({}),
+                // Pass the pet details in the request body
+                body: JSON.stringify({ ownerId, petDetails }),
             });
             if (response.ok) {
                 // Handle success
@@ -49,6 +48,7 @@
         }
     };
 
+
     return (
         <div>
             <Navbar />
@@ -67,7 +67,7 @@
                                         <Typography variant="h6" color="primary">${pet.adoption_fee}</Typography>
                                         <Typography variant="body2" color="textSecondary">Age: {pet.age}</Typography>
                                     </CardContent>
-                                    <Button onClick={() => handleAddPet(pet.owner_id)}>Add Pet</Button>
+                                    <Button onClick={() => handleAddPet(pet.owner_id, { name: pet.name, species: pet.species, breed: pet.breed, description: pet.description, adoption_fee: pet.adoption_fee, age: pet.age })}>Adopt</Button>
                                 </Card>
                             </Link>
                         </Grid>
