Index: frontend/src/components/Dashboard/Dashboard.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Container, Typography } from '@mui/material';\nimport Navbar from '../Navbar/Navbar';\nimport OwnerDashboard from './OwnerDashboard'; // Import the OwnerDashboard component\n\nconst Dashboard = ({ role, userData }) => {\n    console.log(role, userData);\n    return (\n        <div>\n            <Navbar />\n            <Container maxWidth=\"md\" sx={{ marginTop: '100px', textAlign: 'center' }}>\n                <Typography variant=\"h4\" gutterBottom>Dashboard</Typography>\n                {role === 'owner' ? (\n                    <OwnerDashboard userData={userData} />\n                ) : (\n                    <div>\n                        <Button variant=\"contained\" color=\"primary\" component={Link} to=\"/list-pets\">\n                            View Pets\n                        </Button>\n                        <Button variant=\"contained\" color=\"secondary\" component={Link} to=\"/request-pet\">\n                            Request Pet\n                        </Button>\n                    </div>\n                )}\n            </Container>\n        </div>\n    );\n};\n\nexport default Dashboard;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/Dashboard/Dashboard.jsx b/frontend/src/components/Dashboard/Dashboard.jsx
--- a/frontend/src/components/Dashboard/Dashboard.jsx	(revision aafe7dbc83a0befaadd6cbc1281d6fc9326fbe7a)
+++ b/frontend/src/components/Dashboard/Dashboard.jsx	(date 1713231069152)
@@ -1,11 +1,12 @@
 import React from 'react';
-import { Link } from 'react-router-dom';
+import {Link, useLocation} from 'react-router-dom';
 import { Button, Container, Typography } from '@mui/material';
 import Navbar from '../Navbar/Navbar';
 import OwnerDashboard from './OwnerDashboard'; // Import the OwnerDashboard component
 
-const Dashboard = ({ role, userData }) => {
-    console.log(role, userData);
+const Dashboard = () => {
+    const location = useLocation();
+    const { role, userData } = location.state;
     return (
         <div>
             <Navbar />
Index: frontend/src/components/Dashboard/OwnerDashboard.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// OwnerDashboard.jsx\nimport React, {useState} from 'react';\nimport { Card, CardContent, Typography, Grid } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport AddPetForm from \"./AddPetForm\";\n\nconst useStyles = makeStyles({\n    card: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between',\n        height: '100%',\n        border: '1px solid #ccc',\n        borderRadius: '8px',\n        boxShadow: 'none',\n    },\n    cardContent: {\n        flexGrow: 1\n    },\n});\n\nconst OwnerDashboard = ({ userData }) => {\n    const classes = useStyles();\n    const [ownerPets, setOwnerPets] = useState(userData.ownerPets);\n\n    const handleAddPet = (newPet) => {\n        // Send a POST request to add the new pet to the server\n        fetch(`http://localhost:4000/${userData[0].owner_id}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(newPet),\n        })\n            .then((response) => response.json())\n            .then((data) => {\n                // Update the ownerPets state with the new pet added\n                setOwnerPets([...ownerPets, data]);\n            })\n            .catch((error) => console.error('Error adding pet:', error));\n    };\n\n    return (\n        <div>\n            <Typography variant=\"h4\" gutterBottom>My Pets</Typography>\n            <AddPetForm onAdd={handleAddPet} />\n            <Grid container spacing={3}>\n                {userData.map(pet => (\n                    <Grid item key={pet._id} xs={12} sm={6} md={4}>\n                        <Card className={classes.card}>\n                            <CardContent className={classes.cardContent}>\n                                <Typography variant=\"h5\" component=\"div\" gutterBottom>\n                                    {pet.name}\n                                </Typography>\n                                <Typography color=\"text.secondary\" gutterBottom>\n                                    {pet.species} - {pet.breed}\n                                </Typography>\n                                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                                    {pet.description}\n                                </Typography>\n                                <Typography color=\"text.secondary\" gutterBottom>\n                                    Adoption Fee: ${pet.adoption_fee}\n                                </Typography>\n                                <Typography color=\"text.secondary\" gutterBottom>\n                                    Age: {pet.age}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n            <Typography variant=\"h4\" gutterBottom>My Pet Requests</Typography>\n            <Grid container spacing={3}>\n                {userData.map(data => (\n                    // Map over each object in the userData array\n                    data.pet_requests.map(request => (\n                    <Grid item key={request.petrequestid} xs={12} sm={6} md={4}>\n                        <Card className={classes.card}>\n                            <CardContent className={classes.cardContent}>\n                                <Typography variant=\"h5\" component=\"div\" gutterBottom>\n                                    Request for {request.petname}\n                                </Typography>\n                                <Typography color=\"text.secondary\" gutterBottom>\n                                    Requester: {request.username}\n                                </Typography>\n                                <Typography variant=\"body2\" component=\"p\" gutterBottom>\n                                    Description: {request.description}\n                                </Typography>\n                                <Typography color=\"text.secondary\" gutterBottom>\n                                    Contact Details: {request.contact_details}\n                                </Typography>\n                            </CardContent>\n                        </Card>\n                    </Grid>\n                ))\n                ))}\n            </Grid>\n        </div>\n    );\n};\n\nexport default OwnerDashboard;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/Dashboard/OwnerDashboard.jsx b/frontend/src/components/Dashboard/OwnerDashboard.jsx
--- a/frontend/src/components/Dashboard/OwnerDashboard.jsx	(revision aafe7dbc83a0befaadd6cbc1281d6fc9326fbe7a)
+++ b/frontend/src/components/Dashboard/OwnerDashboard.jsx	(date 1713232710908)
@@ -1,4 +1,3 @@
-// OwnerDashboard.jsx
 import React, {useState} from 'react';
 import { Card, CardContent, Typography, Grid } from '@mui/material';
 import { makeStyles } from '@mui/styles';
@@ -42,59 +41,62 @@
 
     return (
         <div>
-            <Typography variant="h4" gutterBottom>My Pets</Typography>
-            <AddPetForm onAdd={handleAddPet} />
-            <Grid container spacing={3}>
-                {userData.map(pet => (
-                    <Grid item key={pet._id} xs={12} sm={6} md={4}>
-                        <Card className={classes.card}>
-                            <CardContent className={classes.cardContent}>
-                                <Typography variant="h5" component="div" gutterBottom>
-                                    {pet.name}
-                                </Typography>
-                                <Typography color="text.secondary" gutterBottom>
-                                    {pet.species} - {pet.breed}
-                                </Typography>
-                                <Typography variant="body2" component="p" gutterBottom>
-                                    {pet.description}
-                                </Typography>
-                                <Typography color="text.secondary" gutterBottom>
-                                    Adoption Fee: ${pet.adoption_fee}
-                                </Typography>
-                                <Typography color="text.secondary" gutterBottom>
-                                    Age: {pet.age}
-                                </Typography>
-                            </CardContent>
-                        </Card>
-                    </Grid>
-                ))}
-            </Grid>
-            <Typography variant="h4" gutterBottom>My Pet Requests</Typography>
-            <Grid container spacing={3}>
-                {userData.map(data => (
-                    // Map over each object in the userData array
-                    data.pet_requests.map(request => (
-                    <Grid item key={request.petrequestid} xs={12} sm={6} md={4}>
-                        <Card className={classes.card}>
-                            <CardContent className={classes.cardContent}>
-                                <Typography variant="h5" component="div" gutterBottom>
-                                    Request for {request.petname}
-                                </Typography>
-                                <Typography color="text.secondary" gutterBottom>
-                                    Requester: {request.username}
-                                </Typography>
-                                <Typography variant="body2" component="p" gutterBottom>
-                                    Description: {request.description}
-                                </Typography>
-                                <Typography color="text.secondary" gutterBottom>
-                                    Contact Details: {request.contact_details}
-                                </Typography>
-                            </CardContent>
-                        </Card>
-                    </Grid>
-                ))
-                ))}
-            </Grid>
+            <AddPetForm onAdd={handleAddPet} />
+            <div>
+                <Typography variant="h4" gutterBottom>My Pets</Typography>
+                <Grid container spacing={3}>
+                    {userData.map(pet => (
+                        <Grid item key={pet._id} xs={12} sm={6} md={4}>
+                            <Card className={classes.card}>
+                                <CardContent className={classes.cardContent}>
+                                    <Typography variant="h5" component="div" gutterBottom>
+                                        {pet.name}
+                                    </Typography>
+                                    <Typography color="text.secondary" gutterBottom>
+                                        {pet.species} - {pet.breed}
+                                    </Typography>
+                                    <Typography variant="body2" component="p" gutterBottom>
+                                        {pet.description}
+                                    </Typography>
+                                    <Typography color="text.secondary" gutterBottom>
+                                        Adoption Fee: ${pet.adoption_fee}
+                                    </Typography>
+                                    <Typography color="text.secondary" gutterBottom>
+                                        Age: {pet.age}
+                                    </Typography>
+                                </CardContent>
+                            </Card>
+                        </Grid>
+                    ))}
+                </Grid>
+                <Typography variant="h4" gutterBottom>My Pet Requests</Typography>
+                <Grid container spacing={3}>
+                    {userData.map(data => (
+                        // Map over each object in the userData array
+                        data.pet_requests.map(request => (
+                            <Grid item key={request.petrequestid} xs={12} sm={6} md={4}>
+                                <Card className={classes.card}>
+                                    <CardContent className={classes.cardContent}>
+                                        <Typography variant="h5" component="div" gutterBottom>
+                                            Request for {request.petname}
+                                        </Typography>
+                                        <Typography color="text.secondary" gutterBottom>
+                                            Requester: {request.username}
+                                        </Typography>
+                                        <Typography variant="body2" component="p" gutterBottom>
+                                            Description: {request.description}
+                                        </Typography>
+                                        <Typography color="text.secondary" gutterBottom>
+                                            Contact Details: {request.contact_details}
+                                        </Typography>
+                                    </CardContent>
+                                </Card>
+                            </Grid>
+                        ))
+                    ))}
+                </Grid>
+            </div>
+
         </div>
     );
 };
Index: frontend/src/components/LoginPage/LoginPage.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// LoginPage.jsx\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { TextField, Button, Typography, Container, MenuItem } from '@mui/material';\nimport Dashboard from \"../Dashboard/Dashboard\";\n\nconst LoginPage = ({ onLogin }) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [role, setRole] = useState('');\n    const [userData, setUserData] = useState(null);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            const response = await fetch('http://localhost:4000/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username,\n                    password,\n                    role\n                })\n            });\n            if (response.ok) {\n                const userData = await response.json();\n                setUserData(userData); // Store user data in state\n            } else {\n                const data = await response.json();\n                alert(data.message); // Display error message from the server\n            }\n        } catch (error) {\n            console.error('Error logging in:', error);\n            alert('An error occurred. Please try again later.');\n        }\n    };\n\n    if (userData) {\n        return <Dashboard role={role} userData={userData} />;\n    }\n\n    return (\n        <Container maxWidth=\"sm\" sx={{ marginTop: '100px', textAlign: 'center' }}>\n            <Typography variant=\"h4\" gutterBottom>Login</Typography>\n            <form onSubmit={handleSubmit}>\n                <TextField\n                    label=\"Username\"\n                    variant=\"outlined\"\n                    fullWidth\n                    margin=\"normal\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />\n                <TextField\n                    type=\"password\"\n                    label=\"Password\"\n                    variant=\"outlined\"\n                    fullWidth\n                    margin=\"normal\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <TextField\n                    select\n                    label=\"Role\"\n                    variant=\"outlined\"\n                    fullWidth\n                    margin=\"normal\"\n                    value={role}\n                    onChange={(e) => setRole(e.target.value)}\n                >\n                    <MenuItem value=\"owner\">Owner</MenuItem>\n                    <MenuItem value=\"user\">User</MenuItem>\n                </TextField>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\n                    Login\n                </Button>\n            </form>\n            <Typography variant=\"body2\" marginTop={2}>\n                Don't have an account? <Link to=\"/signup\">Sign up</Link>\n            </Typography>\n        </Container>\n    );\n};\n\nexport default LoginPage;\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/frontend/src/components/LoginPage/LoginPage.jsx b/frontend/src/components/LoginPage/LoginPage.jsx
--- a/frontend/src/components/LoginPage/LoginPage.jsx	(revision aafe7dbc83a0befaadd6cbc1281d6fc9326fbe7a)
+++ b/frontend/src/components/LoginPage/LoginPage.jsx	(date 1713231115826)
@@ -1,14 +1,14 @@
 // LoginPage.jsx
 import React, { useState } from 'react';
-import { Link } from 'react-router-dom';
+import {Link, useNavigate} from 'react-router-dom';
 import { TextField, Button, Typography, Container, MenuItem } from '@mui/material';
-import Dashboard from "../Dashboard/Dashboard";
 
 const LoginPage = ({ onLogin }) => {
     const [username, setUsername] = useState('');
     const [password, setPassword] = useState('');
     const [role, setRole] = useState('');
-    const [userData, setUserData] = useState(null);
+
+    const navigate = useNavigate();
 
     const handleSubmit = async (e) => {
         e.preventDefault();
@@ -27,7 +27,7 @@
             });
             if (response.ok) {
                 const userData = await response.json();
-                setUserData(userData); // Store user data in state
+                navigate('/dashboard', { state: { role, userData } });
             } else {
                 const data = await response.json();
                 alert(data.message); // Display error message from the server
@@ -38,10 +38,6 @@
         }
     };
 
-    if (userData) {
-        return <Dashboard role={role} userData={userData} />;
-    }
-
     return (
         <Container maxWidth="sm" sx={{ marginTop: '100px', textAlign: 'center' }}>
             <Typography variant="h4" gutterBottom>Login</Typography>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"168c045f-ab5d-4b68-9bfd-19518200dc65\" name=\"Changes\" comment=\"Components added\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/frontend/src/components/Dashboard/AddPetForm.jsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/src/components/Dashboard/AddPetForm.jsx\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/frontend/src/components/Dashboard/OwnerDashboard.jsx\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/frontend/src/components/Dashboard/OwnerDashboard.jsx\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2eeaHyzOG3FsmQVBDIT7bYyMwbP\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"1\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;ts.external.directory.path&quot;: &quot;/Applications/WebStorm.app/Contents/plugins/javascript-impl/jsLanguageServicesImpl/external&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RecentsManager\">\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/src/components/Navbar\" />\n    </key>\n  </component>\n  <component name=\"RunManager\">\n    <configuration name=\"start\" type=\"js.build_tools.npm\" nameIsGenerated=\"true\">\n      <package-json value=\"$PROJECT_DIR$/frontend/package.json\" />\n      <command value=\"run\" />\n      <scripts>\n        <script value=\"start\" />\n      </scripts>\n      <node-interpreter value=\"project\" />\n      <envs />\n      <method v=\"2\" />\n    </configuration>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"168c045f-ab5d-4b68-9bfd-19518200dc65\" name=\"Changes\" comment=\"\" />\n      <created>1712267414204</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1712267414204</updated>\n      <workItem from=\"1712267416180\" duration=\"2968000\" />\n      <workItem from=\"1712625479814\" duration=\"13835000\" />\n      <workItem from=\"1712786935110\" duration=\"4819000\" />\n      <workItem from=\"1712860267239\" duration=\"2707000\" />\n      <workItem from=\"1713044708619\" duration=\"12886000\" />\n      <workItem from=\"1713223718207\" duration=\"6208000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Components added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1712688133516</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1712688133517</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Components added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1712701092180</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1712701092180</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Components added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1712712386978</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1712712386978</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Components added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713047504671</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713047504671</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"Components added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713213238497</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713213238497</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Components added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713216102203</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713216102203</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Components added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713226243343</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713226243343</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Components added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713226284956</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713226284956</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Components added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713227208642</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713227208642</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Components added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713229127198</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713229127198</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Components added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713229526208</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713229526208</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Components added\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1713229657948</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1713229657948</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"13\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Components added\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Components added\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"javascript\">\n          <url>file://$PROJECT_DIR$/frontend/src/index.js</url>\n          <option name=\"timeStamp\" value=\"1\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision aafe7dbc83a0befaadd6cbc1281d6fc9326fbe7a)
+++ b/.idea/workspace.xml	(date 1713233610658)
@@ -6,8 +6,9 @@
   <component name="ChangeListManager">
     <list default="true" id="168c045f-ab5d-4b68-9bfd-19518200dc65" name="Changes" comment="Components added">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/frontend/src/components/Dashboard/AddPetForm.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/components/Dashboard/AddPetForm.jsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/src/components/Dashboard/Dashboard.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/components/Dashboard/Dashboard.jsx" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/frontend/src/components/Dashboard/OwnerDashboard.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/components/Dashboard/OwnerDashboard.jsx" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/frontend/src/components/LoginPage/LoginPage.jsx" beforeDir="false" afterPath="$PROJECT_DIR$/frontend/src/components/LoginPage/LoginPage.jsx" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -78,7 +79,7 @@
       <workItem from="1712786935110" duration="4819000" />
       <workItem from="1712860267239" duration="2707000" />
       <workItem from="1713044708619" duration="12886000" />
-      <workItem from="1713223718207" duration="6208000" />
+      <workItem from="1713223718207" duration="9167000" />
     </task>
     <task id="LOCAL-00001" summary="Components added">
       <option name="closed" value="true" />
@@ -176,7 +177,15 @@
       <option name="project" value="LOCAL" />
       <updated>1713229657948</updated>
     </task>
-    <option name="localTasksCounter" value="13" />
+    <task id="LOCAL-00013" summary="Components added">
+      <option name="closed" value="true" />
+      <created>1713230041037</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1713230041037</updated>
+    </task>
+    <option name="localTasksCounter" value="14" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
